{"version":3,"file":"js/app.adcecf12.js","mappings":"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","sources":["webpack://vue3-wave-audio-player/./src/components/Vue3WaveAudioPlayer.vue","webpack://vue3-wave-audio-player/./src/components/Vue3WaveAudioPlayer.vue?21ed","webpack://vue3-wave-audio-player/./src/main.js","webpack://vue3-wave-audio-player/webpack/bootstrap","webpack://vue3-wave-audio-player/webpack/runtime/chunk loaded","webpack://vue3-wave-audio-player/webpack/runtime/define property getters","webpack://vue3-wave-audio-player/webpack/runtime/global","webpack://vue3-wave-audio-player/webpack/runtime/hasOwnProperty shorthand","webpack://vue3-wave-audio-player/webpack/runtime/jsonp chunk loading","webpack://vue3-wave-audio-player/webpack/startup"],"sourcesContent":["<template>\r\n    <div part=\"player\" ref=\"player\" class=\"player\">\r\n        <button id=\"play\" part=\"play\" ref=\"play\"\r\n        v-if=\"loading_audio_data\"\r\n        >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n            style=\"margin: auto; background: rgba(255, 255, 255, 0); display: block; shape-rendering: auto;\"\r\n            width=\"34px\" height=\"34px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\"\r\n            >\r\n                <circle cx=\"50\" cy=\"50\" fill=\"none\" stroke=\"#858a8d\" stroke-width=\"10\" r=\"35\" stroke-dasharray=\"164.93361431346415 56.97787143782138\">\r\n                <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"1s\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\"></animateTransform>\r\n                </circle>\r\n            </svg>\r\n        </button>\r\n        <button id=\"play\" part=\"play\" ref=\"play\"\r\n        v-else @click=\"playPause\"\r\n        >\r\n            <svg viewBox=\"0 0 34 34\" width=\"34\" height=\"34\" part=\"button\" ref=\"button\"\r\n            >\r\n                <path\r\n                id=\"playPathButton\"\r\n                :d=\"audio_paused ? playPath : pausePath\"\r\n                ></path>\r\n            </svg>\r\n        </button>\r\n        <!-- <div id=\"current-time\" part=\"currenttime\" ref=\"currenttime\">{{ currentTimeContainer_textContent }}</div> -->\r\n        <div id=\"slider\" part=\"slider\" ref=\"slider\">\r\n            <svg\r\n                id=\"svg\"\r\n                part=\"svg\"\r\n                ref=\"svg\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                :viewBox=\"'0 0 ' + wave_width + ' ' + wave_height\"\r\n                :width=\"wave_width\"\r\n                :height=\"wave_height\"\r\n            >\r\n                <!-- <template v-if=\"animation\"> -->\r\n                    <defs>\r\n                        <clipPath :id=\"clipPathX\">\r\n                            <rect\r\n                            x=\"-1\" y=\"-100\"\r\n                            :width=\"wave_width + 2\"\r\n                            :height=\"wave_height + 200\"\r\n                            >\r\n                                <animate\r\n                                id=\"animationsvgx\"\r\n                                ref=\"animationsvgx\"\r\n                                attributeName=\"x\"\r\n                                :values=\"'-1;' + (wave_width + 2)\"\r\n                                :dur=\"animationsvgx_dur\"\r\n                                fill=\"freeze\" />\r\n                            </rect>\r\n                        </clipPath>\r\n                        <clipPath :id=\"clipPathA\">\r\n                            <rect\r\n                            :x=\"-1*(wave_width + 2)\" y=\"-100\"\r\n                            :width=\"wave_width + 2\"\r\n                            :height=\"wave_height + 200\"\r\n                            >\r\n                            >\r\n                                <animate\r\n                                id=\"animationsvg\"\r\n                                ref=\"animationsvg\"\r\n                                attributeName=\"x\"\r\n                                :values=\"animationsvg_val\"\r\n                                :dur=\"animationsvg_dur\"\r\n                                fill=\"freeze\"\r\n                                />\r\n                            </rect>\r\n                        </clipPath>\r\n                    </defs>\r\n                    <path id=\"path1\" ref=\"path1\" stroke-width=\"2\" :d=\"path1_d\" :clip-path=\"'url(#'+clipPathX+')'\"></path>\r\n                    <path\r\n                    id=\"path2\" ref=\"path2\" stroke-width=\"2\" :d=\"path2_d\" :clip-path=\"'url(#'+clipPathA+')'\"\r\n                    :style=\"{display: path2_display}\"\r\n                    ></path>\r\n                <!-- </template> -->\r\n                <!-- <template v-else> -->\r\n                    <!-- <path id=\"path1\" ref=\"path1\" stroke-width=\"2\" style=\"display: none;\"\r\n                    :d=\"path1_d\"\r\n                    ></path>\r\n                    <path\r\n                    id=\"path2\" ref=\"path2\" stroke-width=\"2\"\r\n                    :style=\"{display: path2_display}\"\r\n                    :d=\"path2_d\"\r\n                    >\r\n                        <animate\r\n                        id=\"animationsvg\" ref=\"animationsvg\" attributeName=\"d\"\r\n                        :dur=\"animationsvg_dur\"\r\n                        calcMode=\"linear\"\r\n                        :values=\"animationsvg_val\"\r\n                        fill=\"freeze\"></animate>\r\n                    </path> -->\r\n                <!-- </template> -->\r\n            </svg>\r\n            <input type=\"range\" part=\"input\" id=\"seek-slider\" max=\"100\" value=\"0\" step=\"any\"\r\n            :style=\"{\r\n              height: (wave_height + 'px')\r\n            }\"\r\n            @input=\"sliderInput\"\r\n            @change=\"sliderChange\"\r\n            />\r\n        </div>\r\n        <div id=\"duration\" part=\"duration\">{{ durationContainer_textContent }}</div>\r\n    </div>\r\n\r\n    <!--\r\n        <audio :src=\"src\" ref=\"audio_tag\"\r\n        @loadedmetadata=\"loadSong\"\r\n    -->\r\n    <audio ref=\"audio_tag\"\r\n    @ended=\"onFinish\"\r\n\r\n    @abort=\"$emit('on_abort', $event)\"\r\n    @canplay=\"$emit('on_canplay', $event)\"\r\n    @canplaythrough=\"$emit('on_canplaythrough', $event)\"\r\n    @durationchange=\"$emit('on_durationchange', $event)\"\r\n    @emptied=\"$emit('on_emptied', $event)\"\r\n    @error=\"$emit('on_error', $event)\"\r\n    @loadeddata=\"$emit('on_loadeddata', $event)\"\r\n    @loadstart=\"$emit('on_loadstart', $event)\"\r\n    @pause=\"$emit('on_pause', $event)\"\r\n    @play=\"$emit('on_play', $event)\"\r\n    @playing=\"$emit('on_playing', $event)\"\r\n    @progress=\"$emit('on_progress', $event)\"\r\n    @ratechange=\"$emit('on_ratechange', $event)\"\r\n    @seeked=\"$emit('on_seeked', $event)\"\r\n    @seeking=\"$emit('on_seeking', $event)\"\r\n    @stalled=\"$emit('on_stalled', $event)\"\r\n    @suspend=\"$emit('on_suspend', $event)\"\r\n    @timeupdate=\"$emit('on_timeupdate', $event)\"\r\n    @volumechange=\"$emit('on_volumechange', $event)\"\r\n    @waiting=\"$emit('waiting', $event)\"\r\n    ></audio>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  emits: [\r\n    \"tried_to_seek\",\r\n    \"waiting\",\r\n    \"on_volumechange\",\r\n    \"on_timeupdate\",\r\n    \"on_suspend\",\r\n    \"on_stalled\",\r\n    \"on_seeking\",\r\n    \"on_seeked\",\r\n    \"on_ratechange\",\r\n    \"on_progress\",\r\n    \"on_playing\",\r\n    \"on_play\",\r\n    \"on_pause\",\r\n    \"on_loadstart\",\r\n    \"on_loadeddata\",\r\n    \"on_error\",\r\n    \"on_emptied\",\r\n    \"on_durationchange\",\r\n    \"on_canplaythrough\",\r\n    \"on_canplay\",\r\n    \"on_abort\",\r\n    \"on_loadedmetadata\"\r\n  ],\r\n  props: {\r\n    wave_width: {\r\n      type: Number,\r\n      default: 200\r\n    },\r\n    src: {\r\n      type: String\r\n    },\r\n    wave_height: {\r\n      type: Number,\r\n      default: 40\r\n    },\r\n    wave_options: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    wave_animation: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    wave_type: {\r\n      type: String,\r\n      default: 'mirror'\r\n    },\r\n    load_audio_onmount: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    disable_seeking: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n  },\r\n  data () {\r\n    return {\r\n      animation: false,\r\n      player_options: {\r\n          samples: 40,\r\n          type: null,\r\n          width: null,\r\n          height: null,\r\n          paths: [\r\n              {d:'V', sy: 0, x:50, ey:100 }\r\n          ],\r\n          channel: 0,\r\n          top: 0,\r\n          left: 0,\r\n          animation: false,\r\n          animationframes: 10,\r\n          normalize: true,\r\n      },\r\n\r\n      playPath: \"M8.5 8.7c0-1.7 1.2-2.4 2.6-1.5l14.4 8.3c1.4.8 1.4 2.2 0 3l-14.4 8.3c-1.4.8-2.6.2-2.6-1.5V8.7z\",\r\n      pausePath: \"M9.2 25c0 .5.4 1 .9 1h3.6c.5 0 .9-.4.9-1V9c0-.5-.4-.9-.9-.9h-3.6c-.4-.1-.9.3-.9.9v16zm11-17c-.5 0-1 .4-1 .9V25c0 .5.4 1 1 1h3.6c.5 0 1-.4 1-1V9c0-.5-.4-.9-1-.9 0-.1-3.6-.1-3.6-.1z\",\r\n      playPathButton: null,\r\n      svg: null,\r\n      path1: null,\r\n      path2: null,\r\n      animationsvg: null,\r\n      animationsvgx: null,\r\n      audio: null,\r\n      durationContainer: null,\r\n      seekSlider: null,\r\n      currentTimeContainer: null,\r\n      playIconContainer: null,\r\n      raf: null,\r\n      audioData: null,\r\n\r\n      durationContainer_textContent: '0:00',\r\n      currentTimeContainer_textContent: '0:00',\r\n      animationsvg_dur: '999s',\r\n      animationsvgx_dur: '999s',\r\n      audio_paused: true,\r\n      path2_display: 'block',\r\n      path1_d: null,\r\n      path2_d: null,\r\n      audioPathLoaded: false,\r\n      animationsvg_val: '',\r\n\r\n      clipPathX: 'left-to-right-x',\r\n      clipPathA: 'left-to-right',\r\n      audioContext: null,\r\n      audioSource: null,\r\n      loading_audio_data: false,\r\n      loaded_audio_data: false,\r\n    }\r\n  },\r\n  beforeMount () {\r\n\r\n    //- setting up the options\r\n    this.player_options.width = this.wave_width\r\n    this.player_options.height = this.wave_height\r\n    this.player_options.type = this.wave_type\r\n    if(this.wave_options)\r\n    {\r\n      if(this.wave_options.samples)\r\n      {\r\n        this.player_options.samples = this.wave_options.samples\r\n      }\r\n      if(this.wave_options.width)\r\n      {\r\n        this.player_options.width = this.wave_options.width\r\n      }\r\n      if(this.wave_options.height)\r\n      {\r\n        this.player_options.height = this.wave_options.height\r\n      }\r\n    }\r\n    if(this.wave_animation)\r\n    {\r\n      this.animation = this.wave_animation\r\n    }\r\n    //- finish seettings\r\n    this.clipPathX += '-' + Math.random().toString(36).slice(2)\r\n    this.clipPathA += '-' + Math.random().toString(36).slice(2)\r\n\r\n    this.audioContext = new AudioContext()\r\n    this.audioSource = this.audioContext.createBufferSource()\r\n  },\r\n  mounted () {\r\n    this.playPathButton = this.$refs.player.querySelector('#playPathButton')\r\n    this.svg = this.$refs.player.querySelector('#svg')\r\n    this.path1 = this.$refs.player.querySelector('#path1')\r\n    this.path2 = this.$refs.player.querySelector('#path2')\r\n    this.animationsvg = this.$refs.animationsvg\r\n    this.animationsvgx = this.$refs.animationsvgx\r\n    this.audio =  this.$refs.audio_tag\r\n    this.durationContainer = this.$refs.player.querySelector('#duration')\r\n    this.seekSlider = this.$refs.player.querySelector('#seek-slider')\r\n    this.currentTimeContainer = this.$refs.player.querySelector('#current-time')\r\n    this.playIconContainer = this.$refs.player.querySelector('#play')\r\n\r\n    this.svg.pauseAnimations()\r\n    this.animationsvg_val = '-'+ (this.wave_width + 2) +';-1'\r\n\r\n    if(this.load_audio_onmount)\r\n        this.runAudioPath()\r\n  },\r\n  methods: {\r\n    loadSong ($event) { // done\r\n        this.durationContainer_textContent = this.calculateTime(this.audio.duration - this.seekSlider.value)\r\n        this.seekSlider.max = this.audio.duration\r\n        this.svg.unpauseAnimations()\r\n        this.animationsvg_dur = this.audio.duration +\"s\"\r\n        if(!this.animation)\r\n        {\r\n            this.animationsvgx_dur = this.audio.duration +\"s\"\r\n        }\r\n        this.svg.pauseAnimations()\r\n        this.svg.setCurrentTime(0)\r\n        this.$emit('on_loadedmetadata', $event)\r\n    },\r\n    playPause () {\r\n        if(!this.load_audio_onmount && !this.loaded_audio_data) {\r\n            return this.runAudioPath()\r\n        }\r\n        if(this.audio.paused)\r\n        {\r\n            this.audio.play();\r\n            this.svg.unpauseAnimations();\r\n            this.path2.style.display = \"block\";\r\n            this.audio_paused = false\r\n            this.raf = requestAnimationFrame(this.whilePlaying);\r\n        }\r\n        else\r\n        {\r\n            this.audio.pause();\r\n            this.svg.pauseAnimations();\r\n            this.audio_paused = true\r\n            cancelAnimationFrame(this.raf);\r\n        }\r\n    },\r\n    sliderInput () { // done\r\n        this.path2_display = \"block\";\r\n        this.currentTimeContainer_textContent = this.calculateTime(this.seekSlider.value);\r\n        this.svg.setCurrentTime(this.seekSlider.value);\r\n        if(!this.audio.paused) {\r\n            cancelAnimationFrame(this.raf);\r\n        }\r\n    },\r\n    sliderChange () { //done\r\n        if(this.disable_seeking) {\r\n            this.whilePlaying()\r\n            return this.$emit('tried_to_seek', false)\r\n        }\r\n        this.$emit('tried_to_seek', true)\r\n        this.audio.currentTime = this.seekSlider.value;\r\n        this.path2_display = \"block\";\r\n        this.svg.setCurrentTime(this.seekSlider.value);\r\n\r\n        if(!this.audio.paused)\r\n        {\r\n            this.raf = requestAnimationFrame(this.whilePlaying);\r\n        }\r\n    },\r\n    onFinish ($event) {\r\n        this.seekSlider.value = this.seekSlider.max;\r\n        this.svg.setCurrentTime(this.audio.duration);\r\n        this.svg.pauseAnimations();\r\n        // this.playPathButton.setAttribute(\"d\", this.playPath);\r\n        this.audio_paused = true\r\n        cancelAnimationFrame(this.raf);\r\n        this.$emit('on_ended', $event)\r\n    },\r\n    whilePlaying () {\r\n        // console.log('Log animation running')\r\n        this.seekSlider.value = this.audio.currentTime;\r\n        this.currentTimeContainer_textContent = this.calculateTime(this.seekSlider.value);\r\n        this.svg.setCurrentTime(this.seekSlider.value);\r\n        this.raf = requestAnimationFrame(this.whilePlaying);\r\n    },\r\n    async runAudioPath() {\r\n        // this.audioData =\r\n        await this.getAudioData(this.src);\r\n        // this.loadSong()\r\n        // this.svgDraw();\r\n    },\r\n    svgDraw () {\r\n        const path = this.linearPath(this.audioData, this.player_options);\r\n        // console.log(path)\r\n        if(!this.animation)\r\n        {\r\n            this.path1_d = path\r\n            this.path2_d = path\r\n        }\r\n        else\r\n        {\r\n            this.animationsvg.setAttribute('values', path)\r\n        }\r\n        this.svg.setCurrentTime(this.seekSlider.value);\r\n    },\r\n    calculateTime (secs) {\r\n        const minutes = Math.floor(secs / 60);\r\n        const seconds = Math.floor(secs % 60);\r\n        const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n        return `${minutes}:${returnedSeconds}`;\r\n    },\r\n\r\n\r\n    /**\r\n     * Taken from the Wave file\r\n     */\r\n    getAudioData (url) {\r\n        // window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n        // const audioContext = new AudioContext();\r\n        // let buff = null\r\n        this.loading_audio_data = true\r\n        return fetch(url)\r\n        .then((res) => {\r\n            return res.blob().then((raw) => {\r\n                // console.log( !res.headers.get('Content-Type').includes('audio/') )\r\n                if( !res.headers.get('Content-Type').includes('audio/') ) {\r\n                    this.$emit('on_error', {message: 'Invalid audio type', type: 'not_audio'})\r\n                    return null\r\n                }\r\n                return raw;\r\n            })\r\n            // return res.arrayBuffer()\r\n        })\r\n        .then(bl => {\r\n            this.waiting_to_load = false\r\n            let src = URL.createObjectURL(bl)\r\n            this.audio.src = src\r\n            let fileReader = new FileReader()\r\n            fileReader.onloadend = () => {\r\n                this.audioContext.decodeAudioData(\r\n                    fileReader.result,\r\n                    (bufferData) => {\r\n                        this.audioData = bufferData\r\n                        setTimeout(() => {\r\n                            this.loading_audio_data = false\r\n                            this.loaded_audio_data = true\r\n                            this.loadSong()\r\n                            this.svgDraw()\r\n                        }, 1000)\r\n                    },\r\n                    (err) => {\r\n                        this.loading_audio_data = false\r\n                        this.$emit('on_error', err)\r\n                    }\r\n                )\r\n            }\r\n            fileReader.readAsArrayBuffer(bl)\r\n        })\r\n        .catch((err) => {\r\n            this.loading_audio_data = false\r\n            this.$emit('on_error', err)\r\n        })\r\n    },\r\n    linearPath (audioBuffer, options) {\r\n        const {\r\n            channel = 0,\r\n            samples = audioBuffer.length,\r\n            height = 100,\r\n            width = 800,\r\n            top = 0,\r\n            left = 0,\r\n            type = 'steps',\r\n            paths = [{d:'Q', sx: 0, sy:0, x: 50, y: 100, ex:100, ey:0}],\r\n            animation = false,\r\n            animationframes = 10,\r\n            normalize = true,\r\n            } = options;\r\n\r\n        const framesData = this.getFramesData(audioBuffer, channel, animation, animationframes);\r\n        const filteredData = this.getFilterData(framesData, samples);\r\n        const normalizeData = (normalize ? this.getNormalizeData(filteredData) : filteredData);\r\n\r\n        let path = ``;\r\n\r\n\r\n        const fixHeight = (type != 'bars' ?  (height+top*2) / 2 : height+top);\r\n        const fixWidth = width / samples;\r\n        const pathslength = paths.length;\r\n        const fixpathslength =  (type == 'mirror' ? pathslength*2 : pathslength);\r\n\r\n        const normalizeDataLength = normalizeData.length;\r\n\r\n        for(let f = 0; f < normalizeDataLength; f++) {\r\n            if(f>0) {\r\n                const pathlength = path.length;\r\n                const lastvalue = path.charAt(pathlength - 1);\r\n                if(lastvalue == \";\" || pathlength === 0) {\r\n                    path+=' M 0 0 ;';\r\n                } else {\r\n                    path += ';';\r\n                }\r\n            }\r\n\r\n            let last_pos_x = -9999;\r\n            let last_pos_y = -9999;\r\n\r\n            for (let i = 0; i < samples; i++) {\r\n\r\n                const positive =  (type != 'bars' ? (i % 2 ? 1: -1) : 1);\r\n                let mirror = 1;\r\n                for(let j = 0; j < fixpathslength; j++) {\r\n                    let k = j;\r\n                    if(j >= pathslength) {\r\n                        k = j - pathslength;\r\n                        mirror = -1;\r\n                    }\r\n                    paths[k].minshow = paths[k].minshow ?? 0;\r\n                    paths[k].maxshow = paths[k].maxshow ?? 1;\r\n                    paths[k].normalize = paths[k].normalize ?? false;\r\n                    const normalizeDataValue = (paths[k].normalize ? 1 : normalizeData[f][i]);\r\n                    if(paths[k].minshow <= normalizeData[f][i] && paths[k].maxshow >= normalizeData[f][i]) {\r\n                        switch (paths[k].d) {\r\n                            // LineTo Commands\r\n                            case 'L': {\r\n                                const pos_x = (i * fixWidth)  + (fixWidth*paths[k].sx/100) + left;\r\n                                const pos_y = fixHeight + (normalizeDataValue * paths[k].sy / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                //const end_pos_x = ((i+1) * fixWidth) - (fixWidth*(1-(paths[k].ex/100))) + left;\r\n                                const end_pos_x = (i*fixWidth) + (fixWidth*paths[k].ex/100) + left;\r\n                                const end_pos_y = fixHeight + (normalizeDataValue * paths[k].ey / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                path += `L ${end_pos_x} ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            case 'H': {\r\n                                const pos_x = (i * fixWidth)  + (fixWidth*paths[k].sx/100) + left;\r\n                                const pos_y = fixHeight + (normalizeDataValue * paths[k].y / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                //const end_pos_x = ((i+1) * fixWidth) - (fixWidth*(1-(paths[k].ex/100))) + left;\r\n                                const end_pos_x = (i*fixWidth) + (fixWidth*paths[k].ex/100) + left;\r\n                                const end_pos_y = pos_y;\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                path += `H ${end_pos_x} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            case 'V': {\r\n                                const pos_x = (i * fixWidth)  + (fixWidth*paths[k].x/100) + left;\r\n                                const pos_y = fixHeight + (normalizeDataValue * paths[k].sy / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                const end_pos_x = pos_x;\r\n                                const end_pos_y = fixHeight + (normalizeDataValue * paths[k].ey / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                path += `V ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            // Cubic Bézier Curve Commands\r\n                            case 'C': {\r\n                                const pos_x = (i * fixWidth)  + (fixWidth*paths[k].sx/100) + left;\r\n                                const pos_y = fixHeight  - (fixHeight*paths[k].sy/100)*positive;\r\n\r\n                                const center_pos_x = (i * fixWidth)  + (fixWidth*paths[k].x/100) + left;\r\n                                const center_pos_y = fixHeight + (normalizeDataValue * paths[k].y / 100 * (type != 'bars' ? height : height*2) * -positive*mirror);\r\n\r\n                                //const end_pos_x = ((i+1) * fixWidth) - (fixWidth*(1-(paths[k].ex/100))) + left;\r\n                                const end_pos_x = (i*fixWidth) + (fixWidth*paths[k].ex/100) + left;\r\n                                const end_pos_y = fixHeight - (fixHeight*paths[k].ey/100)*positive;\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                path += `C ${pos_x} ${pos_y} ${center_pos_x} ${center_pos_y} ${end_pos_x} ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            // Quadratic Bézier Curve Commands\r\n                            case 'Q': {\r\n                                const pos_x = (i * fixWidth)  + (fixWidth*paths[k].sx/100) + left;\r\n                                const pos_y = fixHeight + (normalizeDataValue * paths[k].sy / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                const center_pos_x = (i * fixWidth)  + (fixWidth*paths[k].x/100) + left;\r\n                                const center_pos_y = fixHeight + (normalizeDataValue * paths[k].y / 100 * (type != 'bars' ? height : height*2) * -positive*mirror);\r\n\r\n                                //const end_pos_x = ((i+1) * fixWidth) - (fixWidth*(1-(paths[k].ex/100))) + left;\r\n                                const end_pos_x = (i*fixWidth) + (fixWidth*paths[k].ex/100) + left;\r\n                                const end_pos_y = fixHeight + (normalizeDataValue * paths[k].ey / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                path += `Q ${center_pos_x} ${center_pos_y} ${end_pos_x} ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            // Elliptical Arc Curve Commands\r\n                            case 'A': {\r\n                                const pos_x = (i * fixWidth)  + (fixWidth*paths[k].sx/100) + left;\r\n                                const pos_y = fixHeight + (normalizeDataValue * paths[k].sy / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                //const end_pos_x = ((i+1) * fixWidth) - (fixWidth*(1-(paths[k].ex/100))) + left;\r\n                                const end_pos_x = (i*fixWidth) + (fixWidth*paths[k].ex/100) + left;\r\n                                const end_pos_y = fixHeight + (normalizeDataValue * paths[k].ey / 100 * (type != 'bars' ? height/2 : height) * -positive*mirror);\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n                                const rx = paths[k].rx * fixWidth/100;\r\n                                const ry = paths[k].ry * fixWidth/100;\r\n                                let sweep = paths[k].sweep;\r\n                                if(positive == -1) {\r\n                                    if(sweep == 1) {\r\n                                        sweep = 0;\r\n                                    } else {\r\n                                        sweep = 1;\r\n                                    }\r\n                                }\r\n                                if(mirror == -1) {\r\n                                    if(sweep == 1) {\r\n                                        sweep = 0;\r\n                                    } else {\r\n                                        sweep = 1;\r\n                                    }\r\n                                }\r\n                                path += `A ${rx} ${ry} ${paths[k].angle} ${paths[k].arc} ${sweep} ${end_pos_x} ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            // ClosePath Commands\r\n                            case 'Z':\r\n                                path += 'Z ';\r\n                                break;\r\n\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    },\r\n    polarPath (audioBuffer, options) {\r\n        const {\r\n            channel = 0,\r\n            samples = audioBuffer.length,\r\n            distance = 50,\r\n            length = 100,\r\n            top = 0,\r\n            left = 0,\r\n            type = 'steps',\r\n            startdeg = 0,\r\n            enddeg = 360,\r\n            invertdeg = false,\r\n            invertpath = false,\r\n            paths = [{d:'Q', sdeg: 0, sr:0, deg: 50, r: 100, edeg:100, er:0}],\r\n            animation = false,\r\n            animationframes = 10,\r\n            normalize = true,\r\n            } = options;\r\n\r\n        const framesData = this.getFramesData(audioBuffer, channel, animation, animationframes);\r\n        const filteredData = this.getFilterData(framesData, samples);\r\n        const normalizeData = (normalize ? this.getNormalizeData(filteredData) : filteredData);\r\n\r\n        let path = ``;\r\n        const fixenddeg = (enddeg < startdeg ? enddeg+360 : enddeg);\r\n        const deg = (!invertdeg ? (fixenddeg-startdeg) / samples : (startdeg-fixenddeg) / samples );\r\n        const fixOrientation = (!invertdeg ? 90+startdeg : 90+startdeg+180 );\r\n        const invert = (!invertpath ? 1 : -1);\r\n        const pathslength = paths.length;\r\n        const fixpathslength =  (type == 'mirror' ? pathslength*2 : pathslength);\r\n        const pi180 = Math.PI / 180;\r\n\r\n        const normalizeDataLength = normalizeData.length;\r\n\r\n        for(let f = 0; f < normalizeDataLength; f++) {\r\n            if(f>0) {\r\n                const pathlength = path.length;\r\n                const lastvalue = path.charAt(pathlength - 1);\r\n                if(lastvalue == \";\" || pathlength === 0) {\r\n                    path+=' M 0 0 ;';\r\n                } else {\r\n                    path += ';';\r\n                }\r\n            }\r\n\r\n            let last_pos_x = -9999;\r\n            let last_pos_y = -9999;\r\n\r\n            for (let i = 0; i < samples; i++) {\r\n                const positive =  (type != 'bars' ? (i % 2 ? 1: -1) : 1);\r\n                let mirror = 1;\r\n                for(let j = 0; j < fixpathslength; j++) {\r\n                    let k = j;\r\n                    if(j >= pathslength) {\r\n                        k = j - pathslength;\r\n                        mirror = -1;\r\n                    }\r\n                    paths[k].minshow = paths[k].minshow ?? 0;\r\n                    paths[k].maxshow = paths[k].maxshow ?? 1;\r\n                    paths[k].normalize = paths[k].normalize ?? false;\r\n                    const normalizeDataValue = (paths[k].normalize ? 1 : normalizeData[f][i]);\r\n                    if(paths[k].minshow <= normalizeData[f][i] && paths[k].maxshow >= normalizeData[f][i]) {\r\n                        switch (paths[k].d) {\r\n                            // LineTo Commands\r\n                            case 'L': {\r\n                                const angleStart =  ((deg*(i+paths[k].sdeg/100)) - fixOrientation) * pi180;\r\n                                const angleEnd =  ((deg*(i+paths[k].edeg/100)) - fixOrientation) * pi180;\r\n\r\n                                const pos_x = left + ((length*(paths[k].sr/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angleStart);\r\n                                const pos_y = top + ((length*(paths[k].sr/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angleStart);\r\n\r\n                                const end_pos_x = left + ((length*(paths[k].er/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angleEnd);\r\n                                const end_pos_y = top + ((length*(paths[k].er/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angleEnd);\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                path += `L ${end_pos_x} ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n\r\n                            // Cubic Bézier Curve Commands\r\n                            case 'C': {\r\n                                const angleStart =  ((deg*(i+paths[k].sdeg/100)) - fixOrientation) * pi180;\r\n                                const angle =  ((deg*(i+paths[k].deg/100)) - fixOrientation) * pi180;\r\n                                const angleEnd =  ((deg*(i+paths[k].edeg/100)) - fixOrientation) * pi180;\r\n\r\n                                const pos_x = left + ((length*(paths[k].sr/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angleStart);\r\n                                const pos_y = top + ((length*(paths[k].sr/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angleStart);\r\n\r\n                                const center_pos_x = left + ((length*(paths[k].r/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angle);\r\n                                const center_pos_y = top + ((length*(paths[k].r/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angle);\r\n\r\n                                const end_pos_x = left + ((length*(paths[k].er/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angleEnd);\r\n                                const end_pos_y = top + ((length*(paths[k].er/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angleEnd);\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                path += `C ${pos_x} ${pos_y} ${center_pos_x} ${center_pos_y} ${end_pos_x} ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            // Quadratic Bézier Curve Commands\r\n                            case 'Q': {\r\n                                const angleStart =  ((deg*(i+paths[k].sdeg/100)) - fixOrientation) * pi180;\r\n                                const angle =  ((deg*(i+paths[k].deg/100)) - fixOrientation) * pi180;\r\n                                const angleEnd =  ((deg*(i+paths[k].edeg/100)) - fixOrientation) * pi180;\r\n\r\n                                const pos_x = left + ((length*(paths[k].sr/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angleStart);\r\n                                const pos_y = top + ((length*(paths[k].sr/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angleStart);\r\n\r\n                                const center_pos_x = left + ((length*(paths[k].r/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angle);\r\n                                const center_pos_y = top + ((length*(paths[k].r/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angle);\r\n\r\n                                const end_pos_x = left + ((length*(paths[k].er/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angleEnd);\r\n                                const end_pos_y = top + ((length*(paths[k].er/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angleEnd);\r\n\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                path += `Q ${center_pos_x} ${center_pos_y} ${end_pos_x} ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            // Elliptical Arc Curve Commands\r\n                            case 'A': {\r\n                                const angleStart =  ((deg*(i+paths[k].sdeg/100)) - fixOrientation) * pi180;\r\n                                const angleEnd =  ((deg*(i+paths[k].edeg/100)) - fixOrientation) * pi180;\r\n\r\n                                const pos_x = left + ((length*(paths[k].sr/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angleStart);\r\n                                const pos_y = top + ((length*(paths[k].sr/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angleStart);\r\n\r\n                                const end_pos_x = left + ((length*(paths[k].er/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.cos(angleEnd);\r\n                                const end_pos_y = top + ((length*(paths[k].er/100)*normalizeDataValue)* positive*mirror*invert + distance) * Math.sin(angleEnd);\r\n\r\n                                if(pos_x !== last_pos_x || pos_y !== last_pos_y) {\r\n                                    path += `M ${pos_x} ${pos_y} `;\r\n                                }\r\n\r\n                                const angle = deg * i * paths[k].angle / 100;\r\n                                const rx = paths[k].rx * deg/100;\r\n                                const ry = paths[k].ry * deg/100;\r\n\r\n                                let sweep = paths[k].sweep;\r\n                                if(positive == -1) {\r\n                                    if(sweep == 1) {\r\n                                        sweep = 0;\r\n                                    } else {\r\n                                        sweep = 1;\r\n                                    }\r\n                                }\r\n                                if(mirror == -1) {\r\n                                    if(sweep == 1) {\r\n                                        sweep = 0;\r\n                                    } else {\r\n                                        sweep = 1;\r\n                                    }\r\n                                }\r\n                                path += `A ${rx} ${ry} ${angle} ${paths[k].arc} ${sweep} ${end_pos_x} ${end_pos_y} `;\r\n\r\n                                last_pos_x = end_pos_x;\r\n                                last_pos_y = end_pos_y;\r\n                                break;\r\n                            }\r\n\r\n                            // ClosePath Commands\r\n                            case 'Z':\r\n                                path += 'Z ';\r\n                                break;\r\n\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    },\r\n    getFramesData (audioBuffer, channel, animation, animationframes) {\r\n        const rawData = audioBuffer.getChannelData(channel);\r\n\r\n        const framesData = [];\r\n        if(animation) {\r\n            const frames = audioBuffer.sampleRate / animationframes;\r\n            for (let index = 0; index < rawData.length; index += frames) {\r\n                const partraw = rawData.slice(index, index+frames);\r\n                framesData.push(partraw);\r\n            }\r\n        } else {\r\n            framesData.push(rawData);\r\n        }\r\n\r\n        return framesData;\r\n    },\r\n    getFilterData (framesData, samples) {\r\n        const filteredData = [];\r\n        const framesDataLength = framesData.length;\r\n        for(let f = 0; f < framesDataLength; f++) {\r\n            const blockSize = Math.floor(framesData[f].length / samples); // the number of samples in each subdivision\r\n            const filteredDataBlock = [];\r\n            for (let i = 0; i < samples; i++) {\r\n                let blockStart = blockSize * i; // the location of the first sample in the block\r\n                let sum = 0;\r\n                for (let j = 0; j < blockSize; j++) {\r\n                    sum = sum + Math.abs(framesData[f][blockStart + j]); // find the sum of all the samples in the block\r\n                }\r\n                filteredDataBlock.push(sum / blockSize); // divide the sum by the block size to get the average\r\n            }\r\n            filteredData.push(filteredDataBlock);\r\n        }\r\n        return filteredData;\r\n    },\r\n    getNormalizeData (filteredData) {\r\n        const multipliers = [];\r\n        const filteredDataLength = filteredData.length\r\n        for(let i = 0; i < filteredDataLength; i++) {\r\n            const multiplier = Math.max(...filteredData[i]);\r\n            multipliers.push(multiplier);\r\n        }\r\n        const maxMultiplier = Math.pow(Math.max(...multipliers), -1);\r\n\r\n        const normalizeData = [];\r\n        for(let i = 0; i < filteredDataLength; i++) {\r\n            const normalizeDataBlock = filteredData[i].map(n => n * maxMultiplier);\r\n            normalizeData.push(normalizeDataBlock);\r\n        }\r\n        return normalizeData;\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped >\r\n    *, :after, :before {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n    }\r\n    :host {\r\n        display: flex;\r\n\r\n    }\r\n    .player {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    #play {\r\n        background: transparent;\r\n        border: none;\r\n        cursor:pointer;\r\n        /* padding: 0 0 0 10px; */\r\n        margin: 0px;\r\n\r\n    }\r\n    #play svg {\r\n        fill: #858a8d;\r\n        position:relative;\r\n        transition: transform 0.3s;\r\n        top: -0.5px;\r\n    }\r\n    #play svg:hover {\r\n        transform: scale(1.2);\r\n    }\r\n    #play svg path {\r\n        stroke-linecap: round;\r\n        stroke-linejoin: round;\r\n        transition: 0.2s;\r\n    }\r\n    #svg {\r\n        margin: 0 10px;\r\n        overflow: visible;\r\n        stroke-width: 1px;\r\n        fill: none;\r\n    }\r\n    #path1 {\r\n        stroke: #dadcdd;\r\n        overflow: visible;\r\n        stroke-linecap: round;\r\n    }\r\n    #path2 {\r\n        stroke: #858a8d;\r\n        overflow: visible;\r\n        stroke-linecap: round;\r\n    }\r\n    #slider  {\r\n        position:relative;\r\n    }\r\n    #duration, #current-time {\r\n        position: relative;\r\n        top:-1.1px;\r\n        color: #858a8d;\r\n        margin: 0px 10px;\r\n        font-size: 16px;\r\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n        min-width:32px;\r\n    }\r\n    #seek-slider {\r\n        position: absolute;\r\n        width: 100%;\r\n        left: 0;\r\n    }\r\n    input[type=range] {\r\n        -webkit-appearance: none;\r\n        width: 100%;\r\n        background: transparent;\r\n        padding: 0px;\r\n        margin: 0px;\r\n        border: 0px;\r\n    }\r\n    input[type=range]::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n    }\r\n    input[type=range]:focus {\r\n        outline: none;\r\n    }\r\n\r\n    input[type=range]::-ms-track {\r\n        width: 100%;\r\n        cursor: pointer;\r\n        /* Hides the slider so custom styles can be added */\r\n        background: transparent;\r\n        border-color: transparent;\r\n        color: transparent;\r\n    }\r\n    input[type=range]::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        position:relative;\r\n        /*top: -1.5px;*/\r\n        height: 12.5px;\r\n        width: 12.5px;\r\n        border-radius: 50%;\r\n        background: #4fc3f7;\r\n        cursor: pointer;\r\n        box-shadow: none;\r\n    }\r\n    input[type=\"range\"]::-webkit-slider-thumb {\r\n        transition: transform 0.3s;\r\n    }\r\n    input[type=\"range\"]:active::-webkit-slider-thumb {\r\n        transform: scale(1.5);\r\n    }\r\n    input[type=\"range\"]::-moz-range-thumb {\r\n        height: 12.5px;\r\n        width: 12.5px;\r\n        border-radius: 50%;\r\n        background: #4fc3f7;\r\n        cursor: pointer;\r\n        box-shadow: none;\r\n        border: 0px;\r\n    }\r\n\r\n    input[type=\"range\"]:active::-moz-range-thumb {\r\n        transform: scale(1.5);\r\n    }\r\n    span {\r\n        color: red;\r\n    }\r\n</style>","import { render } from \"./Vue3WaveAudioPlayer.vue?vue&type=template&id=46bd5f6e&scoped=true\"\nimport script from \"./Vue3WaveAudioPlayer.vue?vue&type=script&lang=js\"\nexport * from \"./Vue3WaveAudioPlayer.vue?vue&type=script&lang=js\"\n\nimport \"./Vue3WaveAudioPlayer.vue?vue&type=style&index=0&id=46bd5f6e&scoped=true&lang=css\"\n\nimport exportComponent from \"F:\\\\Repos\\\\vue3-wave-audio-player\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46bd5f6e\"]])\n\nexport default __exports__","import Vue3WaveAudioPlayer from './components/Vue3WaveAudioPlayer.vue'\r\n\r\nVue3WaveAudioPlayer.install = (Vue) => {\r\n  Vue.component(Vue3WaveAudioPlayer.name, Vue3WaveAudioPlayer)\r\n}\r\n\r\nexport default Vue3WaveAudioPlayer\r\n// import { createApp } from \"vue\"\r\n// import App from \"./App.vue\"\r\n// createApp(App).mount(\"#app\")","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue3_wave_audio_player\"] = self[\"webpackChunkvue3_wave_audio_player\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2075); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["part","ref","class","id","xmlns","style","width","height","viewBox","preserveAspectRatio","_createElementVNode","cx","cy","fill","stroke","r","attributeName","type","repeatCount","dur","values","keyTimes","_hoisted_4","$data","_createElementBlock","_hoisted_5","onClick","$options","d","$props","x","y","display","max","value","step","onInput","onChange","_toDisplayString","onEnded","onAbort","_ctx","$event","onCanplay","onCanplaythrough","onDurationchange","onEmptied","onError","onLoadeddata","onLoadstart","onPause","onPlay","onPlaying","onProgress","onRatechange","onSeeked","onSeeking","onStalled","onSuspend","onTimeupdate","onVolumechange","onWaiting","emits","props","wave_width","Number","default","src","String","wave_height","wave_options","Object","wave_animation","Boolean","wave_type","load_audio_onmount","disable_seeking","data","animation","player_options","samples","paths","sy","ey","channel","top","left","animationframes","normalize","playPath","pausePath","playPathButton","svg","path1","path2","animationsvg","animationsvgx","audio","durationContainer","seekSlider","currentTimeContainer","playIconContainer","raf","audioData","durationContainer_textContent","currentTimeContainer_textContent","animationsvg_dur","animationsvgx_dur","audio_paused","path2_display","path1_d","path2_d","audioPathLoaded","animationsvg_val","clipPathX","clipPathA","audioContext","audioSource","loading_audio_data","loaded_audio_data","beforeMount","this","Math","random","toString","slice","AudioContext","createBufferSource","mounted","$refs","player","querySelector","audio_tag","pauseAnimations","runAudioPath","methods","loadSong","calculateTime","duration","unpauseAnimations","setCurrentTime","$emit","playPause","paused","play","requestAnimationFrame","whilePlaying","pause","cancelAnimationFrame","sliderInput","sliderChange","currentTime","onFinish","async","getAudioData","svgDraw","path","linearPath","setAttribute","secs","minutes","floor","seconds","returnedSeconds","url","fetch","then","res","blob","raw","headers","get","includes","message","bl","waiting_to_load","URL","createObjectURL","fileReader","FileReader","onloadend","decodeAudioData","result","bufferData","setTimeout","err","readAsArrayBuffer","catch","audioBuffer","options","length","sx","ex","framesData","getFramesData","filteredData","getFilterData","normalizeData","getNormalizeData","fixHeight","fixWidth","pathslength","fixpathslength","normalizeDataLength","f","pathlength","lastvalue","charAt","last_pos_x","last_pos_y","i","positive","mirror","j","k","minshow","maxshow","normalizeDataValue","pos_x","pos_y","end_pos_x","end_pos_y","center_pos_x","center_pos_y","rx","ry","sweep","angle","arc","polarPath","distance","startdeg","enddeg","invertdeg","invertpath","sdeg","sr","deg","edeg","er","fixenddeg","fixOrientation","invert","pi180","PI","angleStart","angleEnd","cos","sin","rawData","getChannelData","frames","sampleRate","index","partraw","push","framesDataLength","blockSize","filteredDataBlock","blockStart","sum","abs","multipliers","filteredDataLength","multiplier","maxMultiplier","pow","normalizeDataBlock","map","n","__exports__","render","Vue3WaveAudioPlayer","Vue","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","key","splice","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}